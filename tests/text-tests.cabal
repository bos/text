cabal-version:  >= 1.10
name:           text-tests
version:        1.2.4.2

homepage:       https://github.com/haskell/text
bug-reports:    https://github.com/haskell/text/issues
synopsis:       An efficient packed Unicode text type.
description:
    .
    An efficient packed, immutable Unicode text type (both strict and
    lazy), with a powerful loop fusion optimization framework.
    .
    The 'Text' type represents Unicode character strings, in a time and
    space-efficient manner. This package provides text processing
    capabilities that are optimized for performance critical use, both
    in terms of large data quantities and high speed.
    .
    The 'Text' type provides character-encoding, type-safe case
    conversion via whole-string case conversion functions (see "Data.Text").
    It also provides a range of functions for converting 'Text' values to
    and from 'ByteStrings', using several standard encodings
    (see "Data.Text.Encoding").
    .
    Efficient locale-sensitive support for text IO is also supported
    (see "Data.Text.IO").
    .
    These modules are intended to be imported qualified, to avoid name
    clashes with Prelude functions, e.g.
    .
    > import qualified Data.Text as T
    .
    == ICU Support
    .
    To use an extended and very rich family of functions for working
    with Unicode text (including normalization, regular expressions,
    non-standard encodings, text breaking, and locales), see
    the [text-icu package](https://hackage.haskell.org/package/text-icu)
    based on the well-respected and liberally
    licensed [ICU library](http://site.icu-project.org/).
    .
    == Internal Representation: UTF-16 vs. UTF-8
    .
    Currently the @text@ library uses UTF-16 as its internal representation
    which is [neither a fixed-width nor always the most dense representation](http://utf8everywhere.org/)
    for Unicode text. We're currently investigating the feasibility
    of [changing Text's internal representation to UTF-8](https://github.com/text-utf8)
    and if you need such a 'Text' type right now you might be interested in using the spin-off
    packages <https://hackage.haskell.org/package/text-utf8 text-utf8> and
    <https://hackage.haskell.org/package/text-short text-short>.


license:        BSD2
license-file:   LICENSE
author:         Bryan O'Sullivan <bos@serpentine.com>
maintainer:     Bryan O'Sullivan <bos@serpentine.com>, Herbert Valerio Riedel <hvr@gnu.org>
copyright:      2009-2011 Bryan O'Sullivan, 2008-2009 Tom Harper
category:       Data, Text
build-type:     Simple
tested-with:    GHC==9.0.1,
                GHC==8.10.4, GHC==8.8.4, GHC==8.6.5, GHC==8.4.4,
                GHC==8.2.2, GHC==8.0.2, GHC==7.10.3, GHC==7.8.4,
                GHC==7.6.3, GHC==7.4.2, GHC==7.2.2, GHC==7.0.4

test-suite tests
  type:           exitcode-stdio-1.0
  ghc-options:
    -Wall -threaded -rtsopts

  hs-source-dirs: .
  main-is:        Tests.hs
  other-modules:
    Tests.Properties
    Tests.Properties.Mul
    Tests.QuickCheckUtils
    Tests.Regressions
    Tests.SlowFunctions
    Tests.Utils

  build-depends:
    QuickCheck >= 2.14.1 && < 2.15,
    base <5,
    bytestring,
    deepseq,
    directory,
    quickcheck-unicode >= 1.0.1.0,
    random,
    tasty,
    tasty-hunit,
    tasty-quickcheck,
    text

  default-language: Haskell2010
  default-extensions: NondecreasingIndentation

source-repository head
  type:     git
  location: https://github.com/haskell/text
